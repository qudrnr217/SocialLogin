server:
  port: 8080
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true

spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/security?serverTimezone=Asia/Seoul
    username: cos
    password: cos1234

  mvc:
    view:
      prefix: /templates/
      suffix: .mustache

  jpa:
    hibernate:
      ddl-auto: update #create update none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 693779976943-29nocg5vr041lva4a0colrlmm1b813j8.apps.googleusercontent.com
            client-secret: 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
            scope:
            - email
            - profile

          facebook:
            client-id: 399764685513109
            client-secret: 69dae5df980c50c9cd547fa0ac655969
            scope:
              - email
              - public_profile

          naver:
            client-id: BZLO2EExUUmynLAKpzo8
            client-secret: qceQRHaBAs
            scope:
              - name
              - email
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/naver
#            구글과 페이스북은 redirect-uri를 생략해도됨. 써도 상관없음.
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response #회원의 정보를 json으로 받는데 response라는 키값으로 네이버가 리턴해줌